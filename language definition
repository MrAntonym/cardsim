program -> rule rule*
rule -> condition --> command ;
command -> update* update-or-action
update-or-action -> update | action
update -> field := (function | field)
action -> <action> | <function>(<param>)
function(param) -> let <string>(param) =
param ->  (int | boolean | string | player | card | slot)*
condition -> conjunction ( or conjunction )*
conjunction -> relation ( and relation )*
relation -> expr rel expr | { condition }
rel -> < | <= | = | >= | > | !=
expr -> term ( addop term )*
term -> factor ( mulop factor )*
factor -> <int> |  ( expr ) | - factor | random [ expr ]
field ->  <player>.<card | slot> | <card>.<|> | <slot>.<card | >                //need to finish
addop -> + | -
mulop -> * | / | mod